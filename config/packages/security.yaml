security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
#    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\Users\User
                property: email

#        projectHolder_providers:
#            entity:
#                class: App\Entity\Users\ProjectHolder
#                property: email

#        app_user_provider:
#            chain:
#                providers: ['freelancer_providers','projectHolder_providers']

    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                provider: app_user_provider
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        freelancer:
            pattern: ^/api/freelancers
            stateless: true
            anonymous: true
            methods: [ POST ]

        enterprise:
            pattern: ^/api/enterprises
            stateless: true
            anonymous: true
            methods: [ POST ]

        individual:
            pattern: ^/api/individuals
            stateless: true
            anonymous: true
            methods: [ POST ]

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
